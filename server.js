const express = require("express");
const axios = require("axios");
const cors = require("cors");
require("dotenv").config();

const app = express();
app.use(express.json());
app.use(cors());

const GEMINI_API_URL =
  "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent";
const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

// Clean response text
const cleanResponse = (text) => {
  return text
    .replace(/[^\p{L}\p{N}\s]/gu, "") // Keep letters (all langs) and numbers
    .replace(/\s{2,}/g, " ")
    .trim();
};

// Prompt Generator
const generatePrompt = (type, input, language = "hi") => {
  const profile = {
    age: 42,
    allergies: ["Ibuprofen", "Shellfish","dust allergy"],
    conditions: ["Asthma", "High Cholesterol","Diabetes"],
  };

  const { age, allergies, conditions } = profile;
  const allergyList = allergies.length ? allergies.join(", ") : "None";
  const conditionList = conditions.length ? conditions.join(", ") : "None";

  // ENGLISH PROMPTS
  if (language === "en") {
    if (type === "medicine") {
      return `
        Health Profile:
        - Age: ${age}
        - Allergies: ${allergyList}
        - Conditions: ${conditionList}

        Is the medicine "${input}" suitable for this person?

        Please answer:
        1. Is it safe?
        2. Possible side effects?
        3. When should it be avoided?
        4. suggest Better alternative medicine ?
        5. Any additional advice.
        please strictly answer each question in  answers as points 
        like point 1 question answer as point one then point 2 question answer as next point and so on. 
        format for answer will be like 
        1.  .......
        2.  .......
        and so on 
        note that the answer should be concise to the point in a bullet points format.
        Please answer in maximum 5 to 6 points.
        pls strictly follow this output format
      `;
    } else if (type === "food") {
      return `
        Health Profile:
        - Age: ${age}
        - Allergies: ${allergyList}
        - Conditions: ${conditionList}

        Is eating "${input}" good for this person?

        Please answer:
        1. Is it beneficial?
        2. Any harmful effects?
        3. Recommended quantity or caution?
        4. Better alternatives?
        5. Additional health advice.
please strictly answer each question in  answers as points 
        like point 1 question answer as point one then point 2 question answer as next point and so on. 
        format for answer will be like 
        1.  .......
        2.  .......
        and so on
        note that the answer should be concise to the point in a bullet points format.
        Please answer in maximum 5 to 6 points. pls strictly follow this output format
      `;
    } else {
      return `
        Health Profile:
        - Age: ${age}
        - Allergies: ${allergyList}
        - Conditions: ${conditionList}

        Question: "${input}"
please strictly answer each question in  answers as points 
        like point 1 question answer as point one then point 2 question answer as next point and so on. 
        format for answer will be like 
        1.  .......
        2.  .......
        and so on 
        note that the answer should be concise to the point in a bullet points format.
        Please answer in maximum 5 to 6 points.
         pls strictly follow this output format.
      `;
    }
  }

  // HINDI PROMPTS
  else {
    if (type === "medicine") {
      return `
        рд╕реНрд╡рд╛рд╕реНрдереНрдп рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓:
        - рдЙрдореНрд░: ${age}
        - рдПрд▓рд░реНрдЬреА: ${allergyList}
        - рд╕реНрдерд┐рддрд┐рдпрд╛рдБ: ${conditionList}

        рдХреНрдпрд╛ рджрд╡рд╛ "${input}" рдЗрд╕ рд╡реНрдпрдХреНрддрд┐ рдХреЗ рд▓рд┐рдП рдЙрдкрдпреБрдХреНрдд рд╣реИ?

        рдХреГрдкрдпрд╛ рдмрд┐рдВрджреБрдУрдВ рдореЗрдВ рдЙрддреНрддрд░ рджреЗрдВ:
        1. рдХреНрдпрд╛ рдпрд╣ рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИ?
        2. рд╕рд╛рдЗрдб рдЗрдлреЗрдХреНрдЯреНрд╕?
        3. рдХрдм рди рд▓реЗрдВ?
        4. рд╡рд┐рдХрд▓реНрдк?
        5. рдЕрдиреНрдп рд╕рд▓рд╛рд╣
        рдХреГрдкрдпрд╛ рдкреНрд░рддреНрдпреЗрдХ рдкреНрд░рд╢реНрди рдХрд╛ рдЙрддреНрддрд░ рдмрд┐рдВрджреБрд╡рд╛рд░ рд░реВрдк рдореЗрдВ рджреЗрдВред
        pls strictly follow this output format
рдЙрддреНрддрд░ рджреЗрдиреЗ рдХрд╛ рдкреНрд░рд╛рд░реВрдк рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП:

.......

.......

....... рдЗрддреНрдпрд╛рджрд┐ред

рдЕрдиреНрдп рдирд┐рд░реНрджреЗрд╢:

рдкреНрд░рддреНрдпреЗрдХ рдЙрддреНрддрд░ рдЙрд╕реА рдХреНрд░рдо рдореЗрдВ рджреЗрдВ рдЬрд┐рд╕ рдХреНрд░рдо рдореЗрдВ рдкреНрд░рд╢реНрди рдкреВрдЫреЗ рдЧрдП рд╣реИрдВред

рдЙрддреНрддрд░ рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реНрдкрд╖реНрдЯ рд╣реЛрдиреЗ рдЪрд╛рд╣рд┐рдПред

рдкреНрд░рддреНрдпреЗрдХ рдЙрддреНрддрд░ рдПрдХ рдмрд┐рдВрджреБ (bullet/point) рдХреЗ рд░реВрдк рдореЗрдВ рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдПред

рдЗрд╕ рдкреНрд░рд╛рд░реВрдк рдХрд╛ рдкрд╛рд▓рди рдЕрд╡рд╢реНрдп рдХрд░реЗрдВред
        рдХреГрдкрдпрд╛ рдЙрддреНрддрд░ рдЕрдзрд┐рдХрддрдо 5 рд╕реЗ 6 рдмрд┐рдВрджреБрдУрдВ рдореЗрдВ рджреЗрдВ рдФрд░ рдкреНрд░рддреНрдпреЗрдХ рдмрд┐рдВрджреБ рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реАрдзрд╛ рд╣реЛредред
      `;
    } else if (type === "food") {
      return `
        рд╕реНрд╡рд╛рд╕реНрдереНрдп рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓:
        - рдЙрдореНрд░: ${age}
        - рдПрд▓рд░реНрдЬреА: ${allergyList}
        - рд╕реНрдерд┐рддрд┐рдпрд╛рдБ: ${conditionList}

        рдХреНрдпрд╛ "${input}" рдЦрд╛рдирд╛ рдЗрд╕ рд╡реНрдпрдХреНрддрд┐ рдХреЗ рд▓рд┐рдП рдареАрдХ рд╣реИ?

        рдЙрддреНрддрд░ рджреЗрдВ:
        1. рдХреНрдпрд╛ рдпрд╣ рд▓рд╛рднрдХрд╛рд░реА рд╣реИ?
        2. рдХреЛрдИ рдиреБрдХрд╕рд╛рди?
        3. рдорд╛рддреНрд░рд╛ рдпрд╛ рд╕рд╛рд╡рдзрд╛рдиреА?
        4. рдмреЗрд╣рддрд░ рд╡рд┐рдХрд▓реНрдк?
        5. рд╕рд▓рд╛рд╣ред
рдХреГрдкрдпрд╛ рдкреНрд░рддреНрдпреЗрдХ рдкреНрд░рд╢реНрди рдХрд╛ рдЙрддреНрддрд░ рдмрд┐рдВрджреБрд╡рд╛рд░ рд░реВрдк рдореЗрдВ рджреЗрдВред
pls strictly follow this output format
рдЙрддреНрддрд░ рджреЗрдиреЗ рдХрд╛ рдкреНрд░рд╛рд░реВрдк рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП:

.......

.......

....... рдЗрддреНрдпрд╛рджрд┐ред

рдЕрдиреНрдп рдирд┐рд░реНрджреЗрд╢:

рдкреНрд░рддреНрдпреЗрдХ рдЙрддреНрддрд░ рдЙрд╕реА рдХреНрд░рдо рдореЗрдВ рджреЗрдВ рдЬрд┐рд╕ рдХреНрд░рдо рдореЗрдВ рдкреНрд░рд╢реНрди рдкреВрдЫреЗ рдЧрдП рд╣реИрдВред

рдЙрддреНрддрд░ рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реНрдкрд╖реНрдЯ рд╣реЛрдиреЗ рдЪрд╛рд╣рд┐рдПред

рдкреНрд░рддреНрдпреЗрдХ рдЙрддреНрддрд░ рдПрдХ рдмрд┐рдВрджреБ (bullet/point) рдХреЗ рд░реВрдк рдореЗрдВ рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдПред

рдЗрд╕ рдкреНрд░рд╛рд░реВрдк рдХрд╛ рдкрд╛рд▓рди рдЕрд╡рд╢реНрдп рдХрд░реЗрдВред
        рдХреГрдкрдпрд╛ рдЙрддреНрддрд░ рдЕрдзрд┐рдХрддрдо 5 рд╕реЗ 6 рдмрд┐рдВрджреБрдУрдВ рдореЗрдВ рджреЗрдВ рдФрд░ рдкреНрд░рддреНрдпреЗрдХ рдмрд┐рдВрджреБ рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реАрдзрд╛ рд╣реЛред
      `;
    } else {
      return `
        рд╕реНрд╡рд╛рд╕реНрдереНрдп рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓:
        - рдЙрдореНрд░: ${age}
        - рдПрд▓рд░реНрдЬреА: ${allergyList}
        - рд╕реНрдерд┐рддрд┐рдпрд╛рдБ: ${conditionList}

        рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХрд╛ рдкреНрд░рд╢реНрди: "${input}"
рдХреГрдкрдпрд╛ рдкреНрд░рддреНрдпреЗрдХ рдкреНрд░рд╢реНрди рдХрд╛ рдЙрддреНрддрд░ рдмрд┐рдВрджреБрд╡рд╛рд░ рд░реВрдк рдореЗрдВ рджреЗрдВред
pls strictly follow this output format
рдЙрддреНрддрд░ рджреЗрдиреЗ рдХрд╛ рдкреНрд░рд╛рд░реВрдк рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП:

.......

.......

....... рдЗрддреНрдпрд╛рджрд┐ред

рдЕрдиреНрдп рдирд┐рд░реНрджреЗрд╢:

рдкреНрд░рддреНрдпреЗрдХ рдЙрддреНрддрд░ рдЙрд╕реА рдХреНрд░рдо рдореЗрдВ рджреЗрдВ рдЬрд┐рд╕ рдХреНрд░рдо рдореЗрдВ рдкреНрд░рд╢реНрди рдкреВрдЫреЗ рдЧрдП рд╣реИрдВред

рдЙрддреНрддрд░ рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реНрдкрд╖реНрдЯ рд╣реЛрдиреЗ рдЪрд╛рд╣рд┐рдПред

рдкреНрд░рддреНрдпреЗрдХ рдЙрддреНрддрд░ рдПрдХ рдмрд┐рдВрджреБ (bullet/point) рдХреЗ рд░реВрдк рдореЗрдВ рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдПред

рдЗрд╕ рдкреНрд░рд╛рд░реВрдк рдХрд╛ рдкрд╛рд▓рди рдЕрд╡рд╢реНрдп рдХрд░реЗрдВред
        рдХреГрдкрдпрд╛ рдЙрддреНрддрд░ рдЕрдзрд┐рдХрддрдо 5 рд╕реЗ 6 рдмрд┐рдВрджреБрдУрдВ рдореЗрдВ рджреЗрдВ рдФрд░ рдкреНрд░рддреНрдпреЗрдХ рдмрд┐рдВрджреБ рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реАрдзрд╛ рд╣реЛред
      `;
    }
  }
};

// Webhook route
app.post("/webhook", async (req, res) => {
  try {
    const body = req.body.queryResult || {};
    const queryText = body.queryText || "Hello";
    const parameters = body.parameters || {};

    const type = parameters.type || "general";
    const item = parameters.item || queryText;
    const language = parameters.language || "en";

    const prompt = generatePrompt(type, item, language);
    console.log(`ЁЯУЭ Prompt:\n${prompt}`);

    const geminiPromise = axios.post(
      `${GEMINI_API_URL}?key=${GEMINI_API_KEY}`,
      {
        contents: [{ parts: [{ text: prompt }] }],
      }
    );

    const geminiResponse = await Promise.race([
      geminiPromise,
      new Promise((_, reject) =>
        setTimeout(() => reject(new Error("Timeout")), 7000)
      ),
    ]);

    let answer =
      geminiResponse?.data?.candidates?.[0]?.content?.parts?.[0]?.text ||
      "Unable to generate a response.";
    console.log("тЬЕ Raw response:", answer);
    answer = cleanResponse(answer);

    return res.json({ fulfillmentText: answer });
  } catch (error) {
    console.error("тЭМ Error:", error.message);
    return res.json({
      fulfillmentText: "Unable to generate a response. Please try again.",
    });
  }
});

// Start server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`ЁЯЪА Server running on port ${PORT}`));
